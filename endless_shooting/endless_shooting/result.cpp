//*****************************************************************************
//
// リザルト画面の処理 [result.cpp]
// Author : 小熊朗
//
//*****************************************************************************

//*****************************************************************************
//インクルードファイル
//*****************************************************************************
#include "main.h"
#include "renderer.h"
#include "scene2d.h"
#include "scene.h"
#include "score.h"
#include "manager.h"
#include "result.h"
#include "player.h"
#include "mode.h"

//*****************************************************************************
//静的メンバ変数
//*****************************************************************************

//*****************************************************************************
//コンストラクタ
//*****************************************************************************
CResult::CResult(int nPriority) : CScene2D(nPriority)
{
	m_pSound = nullptr;
}

//*****************************************************************************
//デストラクタ
//*****************************************************************************
CResult::~CResult()
{
}

//*****************************************************************************
//クリエイト関数
//*****************************************************************************
CResult * CResult::Create()
{
	CResult *pResult = nullptr;
	if (pResult == NULL)
	{
		pResult = new CResult;
	}
	return pResult;
}

//*****************************************************************************
//初期化関数
//*****************************************************************************
void CResult::Init(CMode *pMode)
{
	m_pSound = CManager::GetSound();
	//生成宣言
}

//*****************************************************************************
//更新関数
//*****************************************************************************
void CResult::Update(CMode *pMode)
{
	//m_pSound->Play();
	//m_pSound->Stop();

	//pMode->ChangeState();
}

//*****************************************************************************
//終了関数
//*****************************************************************************
void CResult::Uninit(void)
{
	Release();
	Select(6);
}
