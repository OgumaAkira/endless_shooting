//*****************************************************************************
//
// スピード処理 [speed.cpp]
// Author : 小熊朗
//
//*****************************************************************************

//*****************************************************************************
//インクルードファイル
//*****************************************************************************
#include "combobonusUI.h"
#include "sound.h"

//*****************************************************************************
//静的メンバ変数
//*****************************************************************************
LPDIRECT3DTEXTURE9	CComboBonusUI::m_pTexture = {};		//テクスチャの情報


//*****************************************************************************
//コンストラクタ
//*****************************************************************************
CComboBonusUI::CComboBonusUI(int nPriority) :CScene2D(nPriority)
{
	m_pos = D3DXVECTOR3(0, 0, 0);			// ポリゴンの位置
	m_move = D3DXVECTOR3(0, 0, 0);			// ポリゴンの位置
	m_size = D3DXVECTOR3(0, 0, 0);			// ポリゴン大きさ
	m_nColor = 0;
}

//*****************************************************************************
//デストラクタ
//*****************************************************************************
CComboBonusUI::~CComboBonusUI()
{

}

//*****************************************************************************
//クリエイト関数
//*****************************************************************************
CComboBonusUI * CComboBonusUI::Create(D3DXVECTOR3 pos, D3DXVECTOR3 size)
{
	CComboBonusUI *pComboUI = NULL;
	if (pComboUI == NULL)
	{
		pComboUI = new CComboBonusUI;
		pComboUI->Init(pos, size);
	}
	return pComboUI;
}

//*****************************************************************************
//初期化関数
//*****************************************************************************
HRESULT CComboBonusUI::Init(D3DXVECTOR3 pos, D3DXVECTOR3 size)
{
	CScene2D::Init(pos, size);
	m_nColor = 1.0f;
	SetColor(D3DXCOLOR(m_nColor, m_nColor, m_nColor, m_nColor));
	//サウンド取得
	pSound = CManager::GetSound();
	//テクスチャの情報をscene2dに持ってく
	//BirdTexture(m_pTexture);
	return S_OK;
}

//*****************************************************************************
//終了関数
//*****************************************************************************
void CComboBonusUI::Uninit(void)
{
	CScene2D::Uninit();
}

//*****************************************************************************
//更新関数
//*****************************************************************************
void CComboBonusUI::Update(void)
{
	CScene2D::Update();

	if (CGame::GetGameState() == CGame::GAMESTATE_NORMAL)
	{	//コンボスコア表示
		if (m_nColor > 0 && m_nColor <= 1.0f)
		{
			m_nColor -= 0.015f;
		}
		else
		{
			Uninit();
		}
	}
		SetColor(D3DXCOLOR(m_nColor, m_nColor, m_nColor, m_nColor));
}

//*****************************************************************************
//描画関数
//*****************************************************************************
void CComboBonusUI::Draw(void)
{
	CScene2D::Draw();
}

//*****************************************************************************
//コンボ表示関数
//*****************************************************************************
void CComboBonusUI::ComboEvent(void)
{

}

//*****************************************************************************
//ロード関数
//*****************************************************************************
HRESULT CComboBonusUI::Load(void)
{
	//レンダリングの情報を取得
	LPDIRECT3DDEVICE9 pDevice = CManager::GetRenderer()->GetDevice();

	//テクスチャの読み込み
	D3DXCreateTextureFromFile(pDevice,
		COMBOBONUS_TEXTURE, &m_pTexture);

	return S_OK;
}

//*****************************************************************************
//アンロード関数
//*****************************************************************************
void CComboBonusUI::UnLoad(void)
{
	if (m_pTexture != NULL)
	{
		//テクスチャの破棄
		m_pTexture->Release();
		m_pTexture = NULL;
	}
}
