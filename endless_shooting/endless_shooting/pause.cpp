//*****************************************************************************
//
// ポーズ画面の処理 [pause.cpp]
// Author : 小熊朗
//
//*****************************************************************************

//*****************************************************************************
//インクルードファイル
//*****************************************************************************
#include "main.h"
#include "renderer.h"
#include "scene2d.h"
#include "scene.h"
#include "manager.h"
#include "player.h"
#include "pause.h"

//*****************************************************************************
//静的メンバ変数
//*****************************************************************************
CPlayer			*CPause::m_pPlayer = NULL;		//プレイヤーのポインタ


//*****************************************************************************
//コンストラクタ
//*****************************************************************************
CPause::CPause(int nPriority) : CScene2D(nPriority)
{

}

//*****************************************************************************
//デストラクタ
//*****************************************************************************
CPause::~CPause()
{
}

//*****************************************************************************
//クリエイト関数
//*****************************************************************************
CPause * CPause::Create()
{
	CPause *pPause = NULL;
	if (pPause == NULL)
	{
		pPause = new CPause;
		pPause->Init();
		pPause->SetObjType(OBJTYPE_PAUSE);
	}
	return pPause;
}

//*****************************************************************************
//初期化関数
//*****************************************************************************
HRESULT CPause::Init()
{
	POINT posPoint;										//マウス情報を取得
	GetCursorPos(&posPoint);							// マウス座標を取得する
														//ターゲットマーカーの生成
	m_pPlayer = CPlayer::Create(D3DXVECTOR3((float)posPoint.x, (float)posPoint.y, 0.0f),
		D3DXVECTOR3(PLAYER_SIZEX, PLAYER_SIZEY, 0));

	return S_OK;
}

//*****************************************************************************
//終了関数
//*****************************************************************************
void CPause::Uninit(void)
{
	Release();
}

//*****************************************************************************
//更新関数
//*****************************************************************************
void CPause::Update(void)
{
#if DEBUG_SOUND
	//サウンド停止	
	CSound *pSound = CManager::GetSound();
	pSound->Stop(CSound::SOUND_LABEL_GAMEBGM);			//サウンドを止める
#endif // DEBUG_SOUND
}

//*****************************************************************************
//描画関数
//*****************************************************************************
void CPause::Draw(void)
{
}
